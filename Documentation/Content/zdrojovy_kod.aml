<?xml version="1.0" encoding="utf-8"?>
<topic id="289856a3-70ab-48bb-a85e-7e4778f43809" revisionNumber="1">
  <developerHowToDocument
    xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5"
    xmlns:xlink="http://www.w3.org/1999/xlink">

    <!--
    <summary>
      <para>Optional summary abstract</para>
    </summary>
    -->

    <introduction>
      <para>
        V zásadě asi nejjednodušší způsob integrace knihovny MatrixLibrary do již existujícího projektu.
        Předpokládá se, že uživatel má stažen gitovský projekt ze služby Bitbucket.
        Postup získání je popsán zde: <link xlink:href="800a1c4c-a8fb-411b-a956-b367f741b596"/>.
      </para>
      <para>
        Integrace zdrojového kódu do existujícího projektu je založená na tom, že si programátor, který chce využít MatrixLibrary knihovnu, vezme zdrojové soubory knihovny a jednoduše je přidá do svého projektu, jako kdyby přidával další svůj kód.
        Díky tomu budou matice a metody na nich vždycky dostupné v daném programu a nebude třeba připojovat dodatečný *.dll soubor, který by obsahoval kód knihovny.
        Výsledná aplikace tedy nebude závislá na externí knihovně.
      </para>
    </introduction>

    <!-- Optional procedures followed by optional code example but must have
         at least one procedure or code example -->
    <procedure>
      <title>Postup integrace</title>
      <steps class="ordered">
        <step>
          <content>
            <para><legacyBold>Nalezení zdrojových souborů knihovny MatrixLibrary.</legacyBold></para>
            <para>
              Zdrojové soubory, které obsahují kód matice a metod na ní jsou umístěny ve složce <localUri>./MatrixLibrary</localUri>.
              Ta je relativní k výchozí složce celého projektu knihovny MatrixLibrary. Ve zmíněné složce jsou pak jmenovitě tyto soubory:
            </para>
            <list class="bullet">
              <listItem>matrix.cs</listItem>
              <listItem>matrix_number.cs</listItem>
              <listItem>matrix_alter.cs</listItem>
              <listItem>matrix_computation.cs</listItem>
              <listItem>matrix_decomposition.cs</listItem>
              <listItem>matrix_characteristics.cs</listItem>
              <listItem>matrix_operations.cs</listItem>
              <listItem>matrix_properties.cs</listItem>
            </list>
          </content>
        </step>
        <step>
          <content>
            <para><legacyBold>Přidání souborů do projektu ve Visual Studiu.</legacyBold></para>
            <para>
              Je doporučeno, pokud se bude kód takto integrovat do projektu, aby soubory knihovny MatrixLibrary byly odděleny od ostatních souborů projektu.
              To může být dosaženo jednoduše například zkopírováním celého gitovského repozitáře do složky projektu, do kterého se knihovna bude integrovat.
              Ve Visual Studiu pak stačí k danému projektu přidat existující položky (jejichž seznam je uveden v kroku výše), které nalezneme při tomto postupu ve složce <localUri>./matrixlibrary/MatrixLibrary</localUri>.
            </para>
          </content>
        </step>
        <step>
          <content>
            <para>
              <legacyBold>Překlad.</legacyBold>
            </para>
            <para>
              Při překladu pak není třeba dělat žádné dodatečné úpravy v projektu.
              S takto integrovanými zdrojovými kódy knihovny se aktuální projekt jednoduše přeloží, tak jak se překládal před integrací.
            </para>
          </content>
        </step>
      </steps>
      <!-- <conclusion>Optional conclusion</conclusion> -->
    </procedure>

    <!-- <codeExample>Optional code example</codeExample> -->

    <!-- <buildInstructions>Optional instructions for building a
         code example.</buildInstructions> -->

    <!-- <robustProgramming>Optional discussion of error handling and other
         issues related to writing solid code.</robustProgramming> -->

    <!-- <security>Optional discussion of security issues.</security> -->

    <relatedTopics>
      <!-- One or more of the following:
           - A local link
           - An external link
           - A code entity reference

      <link xlink:href="Other Topic's ID">Link text</link>
      <externalLink>
          <linkText>Link text</linkText>
          <linkAlternateText>Optional alternate link text</linkAlternateText>
          <linkUri>URI</linkUri>
      </externalLink>
      <codeEntityReference>API member ID</codeEntityReference>

      Examples:

      <link xlink:href="00e97994-e9e6-46e0-b420-5be86b2f8278">Some other topic</link>

      <externalLink>
          <linkText>SHFB on GitHub</linkText>
          <linkAlternateText>Go to GitHub</linkAlternateText>
          <linkUri>https://GitHub.com/EWSoftware/SHFB</linkUri>
      </externalLink>

      <codeEntityReference>T:TestDoc.TestClass</codeEntityReference>
      <codeEntityReference>P:TestDoc.TestClass.SomeProperty</codeEntityReference>
      <codeEntityReference>M:TestDoc.TestClass.#ctor</codeEntityReference>
      <codeEntityReference>M:TestDoc.TestClass.#ctor(System.String,System.Int32)</codeEntityReference>
      <codeEntityReference>M:TestDoc.TestClass.ToString</codeEntityReference>
      <codeEntityReference>M:TestDoc.TestClass.FirstMethod</codeEntityReference>
      <codeEntityReference>M:TestDoc.TestClass.SecondMethod(System.Int32,System.String)</codeEntityReference>
      -->
    </relatedTopics>
  </developerHowToDocument>
</topic>
